@model ResourcesWebApplication.Models.Infrastractures.CriticalInfrastructure

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>CriticalInfrastructure</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                <input asp-for="Category" class="form-control-plaintext" autocomplete="off" spellcheck="false" />
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control-plaintext" autocomplete="off" spellcheck="false" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Document" class="control-label"></label>
                <input asp-for="Document" class="form-control-plaintext" autocomplete="off" spellcheck="false" />
                <span asp-validation-for="Document" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" id="createIDToDisableAfter1SClicked" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    function disableAfter1SClicked()
    {
        const createIDToDisableAfter1SClicked = document.getElementById('createIDToDisableAfter1SClicked');
        setTimeout(d => {
            createIDToDisableAfter1SClicked.disabled = true;
        }, 1);
    }
    disableAfter1SClicked();
</script>